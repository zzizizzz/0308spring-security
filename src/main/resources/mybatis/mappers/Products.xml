<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.ProductMapper">
	<!-- 
		<association />은 복잡한 타입의 연관관계를 나타낸다.
		<association />은 "has one"타입의 관계를 나타낸다.
		 < collection/>은 복잡한 콜렉션 연관관계를 나타낸다.
		 < collection/>은 "has - many 타입의 관계를 나타낸다.
		 
		 	class Product {
		 	int no,
		 	String name;
		 	int price;
		 	Company company;			 - 복잡한 타입의 연관관계
		 	ProductCategory category;	 - 복잡하 타입의 연관관계
		 	List<Review> reviews;		 - 복잡한 타입의 콜렉션 연관관계
	 -->


	<resultMap type="com.example.vo.Product" id="ProductResultMap">
		<id column="product_no" property="no" />
		<result column="product_name" property="name"/>
		<result column="product_description" property="description"/>
		<result column="product_stock" property="stock"/>
		<result column="product_status" property="status"/>
		<result column="product_price" property="price"/>
		<result column="product_filename" property="filename"/>
		<result column="product_updated_date" property="updatedDate"/>
		<result column="product_created_date" property="createdDate"/>
		<association property="company" column="company_no"
			select="com.example.mapper.CompanyMapper.getCompanyByNo" />
		<association property="category" column="product_category_no" 
			select="com.example.mapper.ProductCategoryMapper.getProductCategoryByNo" />
	</resultMap>

	<select id="getProductsByCategoryNo" parameterType="int" resultType="com.example.vo.Product">
	
		select
			P.product_no 		as no,
			P.product_name 		as name,
			P.product_price		as price,
			P.company_no 		as "company.no",
			C.company_name 		as	"company.name",
			P.product_status	as status
		from	
			shop_products P, shop_companies	C
		where
			p.product_category_no in (select category_no
										from shop_product_categories
										where parent_category_no = #{value})
			and P.company_no = C.company_no
		order by
			P.product_no desc
	</select>
	
	<select id="getAllProducts" resultMap="ProductResultMap">
	select 
		*
	from 
		shop_products
	order by
		product_no desc
	</select>
	
	
	
	<select id="getProductByNo" parameterType="int" resultMap="ProductResultMap">
		select 
			*
		from
			shop_products
		where
			product_no = #{value}
	</select>
	
	<insert id="insertProduct" parameterType="com.example.vo.Product">
		insert into shop_products
		(product_no, product_name, product_description, product_price, product_stock, company_no, product_category_no)
		values
		(products_seq.nextval, #{name}, #{description}, #{price}, #{stock}, #{company.no}, #{category.no})
	</insert>
	
	<update id="updateProduct" parameterType="com.example.vo.Product">
		update
				shop_products
		set
				product_name = #{name},
				product_description = #{description},
				product_price = #{price},
				product_stock = #{stock},
				<if test="filename !=null">
					product_filename = #{filename},

				</if>
				<if test="status !=null">
					product_status = #{status},

				</if>
				
				company_no = #{company.no},
				product_category_no = #{category.no},
				product_updated_date = sysdate
				
		where
				product_no = #{no}
	</update>
	
</mapper>